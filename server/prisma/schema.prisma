// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String
  password  String
  hashRt    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  post      Post[]
  comment   Comment[]
  likes      Like[]
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String
  link      String
  imgUrl    String
  videoUrl  String
  view      Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  ogTitle   String
  userId    Int
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment[]
  tags      PostTags[]
  likes      Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model PostTags {
  id     Int   @id @default(autoincrement())
  post   Post? @relation(fields: [postId], references: [id])
  tag    Tag?  @relation(fields: [tagId], references: [id])
  postId Int?
  tagId  Int?

  @@unique([tagId, postId])
}

model Tag {
  id    Int        @id @default(autoincrement())
  title String     @unique
  posts PostTags[]
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId    Int
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}
